{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["rgbToHex","SingleColor","weight","index","hexColor","base","useState","alert","setAlert","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","numColors","setNumColors","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","parseInt","type","value","onChange","target","placeholder","border","map","hex","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LASeA,I,OCuBAC,EA5BK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAC3C,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAQ,WAAOL,GAUvB,OATEM,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBJ,GAAS,KACV,MACH,OAAO,WACHK,aAAaF,MAElB,CAACJ,IAGJ,0BACIO,UAAS,gBAAWX,EAAQE,GAAQ,eACpCU,MAAO,CAACC,gBAAgBP,GACxBQ,QAAS,WACLT,GAAS,GACTU,UAAUC,UAAUC,UAAUX,IALtC,UAQI,oBAAGK,UAAU,gBAAb,UAA8BZ,EAA9B,OACA,mBAAGY,UAAU,cAAb,SAA4BL,IAC3BF,GAAS,mBAAGO,UAAS,sBAAiBX,EAAQE,GAAQ,eAA7C,sC,gBCiCHgB,MAxDf,WACE,MAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAAkCjB,mBAAS,IAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA0BnB,oBAAS,GAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAwBrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAIL,IAA3D,mBAAOM,EAAP,KAAaC,EAAb,KAWA,OACE,qCACE,0BAASjB,UAAU,YAAnB,UACE,iDACA,uBAAMkB,SAdS,SAAAC,GACnBA,EAAEC,iBACFP,GAAS,GACT,IACE,IAAIQ,EAAS,IAAIP,IAAON,GAAOO,IAAIO,SAASZ,IAC5CO,EAAQI,GACT,MAAMT,GACLC,GAAS,KAOP,UACE,uBACEU,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAAAN,GAAC,OAAIV,EAASU,EAAEO,OAAOF,QACjCG,YAAY,UACZ3B,UAAS,UAAKY,EAAQ,QAAS,QAElC,uBACGW,KAAK,SACLC,MAAOd,EACPe,SAAU,SAAAN,GAAC,OAAIR,EAAaQ,EAAEO,OAAOF,QACrCvB,MAAO,CAAC2B,OAAO,oBAGjB,wBAAQL,KAAK,SAASvB,UAAU,MAAhC,4BAGJ,yBAASA,UAAU,SAAnB,SAEIgB,EAAKa,KAAI,SAACrB,EAAOnB,GACf,OACE,cAAC,EAAD,2BAEMmB,GAFN,IAGEnB,MAAOA,EACPC,SAAUkB,EAAMsB,IAChBvC,KAAMyB,EAAKe,OAAS,IAJf1C,Y,MCxCrB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97194e13.chunk.js","sourcesContent":["function componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n}\r\n  \r\nfunction rgbToHex(r, g, b) {\r\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n  \r\nexport default rgbToHex;","import { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\n\r\nconst SingleColor = ({weight, index, hexColor, base}) => {\r\n    const [alert, setAlert] = useState(false)\r\n    const hexValue = `#${hexColor}`\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setAlert(false)\r\n        }, 2500)\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [alert])\r\n\r\n  return (\r\n    <article\r\n        className={`color ${index > base && 'color-light'}`}\r\n        style={{backgroundColor:hexValue}}\r\n        onClick={() => {\r\n            setAlert(true)\r\n            navigator.clipboard.writeText(hexValue)\r\n        }}\r\n    >\r\n        <p className=\"percent-value\">{weight}%</p>\r\n        <p className=\"color-value\">{hexValue}</p>\r\n        {alert && <p className={`alert color ${index > base && 'color-light'}`}> copied to clipboard</p>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor","import { useState } from 'react'\nimport SingleColor from './SingleColor'\nimport Values from 'values.js'\n\nfunction App() {\n  const [color, setColor] = useState('')\n  const [numColors, setNumColors] = useState(10)\n  const [error, setError] = useState(false)\n  const [list, setList] = useState(new Values('#f15025').all(numColors))\n  const handleSubmit = e => {\n    e.preventDefault()\n    setError(false)\n    try{\n      let colors = new Values(color).all(parseInt(numColors))\n      setList(colors)\n    }catch(error){\n      setError(true)\n    }\n  }\n  return (\n    <>\n      <section className=\"container\">\n        <h3>Color Generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\"\n            value={color}\n            onChange={e => setColor(e.target.value)}\n            placeholder='#f15025'\n            className={`${error ? 'error': null}`}\n          />\n         <input \n            type=\"number\"\n            value={numColors}\n            onChange={e => setNumColors(e.target.value)}\n            style={{border:\"2px solid gray\"}}\n          />\n\n          <button type=\"submit\" className=\"btn\">Generate</button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {\n          list.map((color, index) => {\n            return (\n              <SingleColor \n                key={index}\n                {...color}\n                index={index}\n                hexColor={color.hex}\n                base={list.length / 2}\n              />\n            )\n          })\n        }\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}